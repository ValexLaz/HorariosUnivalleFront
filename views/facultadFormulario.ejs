<form id="formulario" class="faculty" action="/agregar-facultad" method="POST">
    <div class="mb-3">
        <label for="nombreFacultad" class="form-label">Nombre de la Facultad</label>
        <input type="text" class="form-control" id="nombreFacultad" name="name" required>
    </div>
    <div class="mb-3">
        <label for="descripcionFacultad" class="form-label">Descripción de la Facultad</label>
        <textarea class="form-control" id="descripcionFacultad" name="description" required></textarea>
    </div>
    <div id="checkboxContainer" class="mb-3">
        <label for="descripcionFacultad" class="form-label">Edificios (Modulos)</label>
    </div>
    <button type="submit" class="btn btn-primary">Agregar Facultad</button>
</form>
<script type="module">
    import RepositoryAPI from './js/RepositoryAPI.js';
    const repoAPI = new RepositoryAPI('building');
    $(document).ready(function () {
        console.log("Document Ready");
        async function getDetailsByFaculties() {
            const response = await repoAPI.getAll();

            const radioContainer = $('#checkboxContainer');

            response.data.forEach(building => {
                const radioDiv = $('<div>').addClass('form-check'); // Cambiar el nombre a radioDiv para los radio buttons
                const radioInput = $('<input>').attr({
                    type: 'radio', // Cambiar el tipo a 'radio'
                    class: 'form-check-input',
                    id: building._id,
                    name: 'building', // Cambiar el nombre a 'buildingRadio' (mismo nombre para todos)
                    value: building._id
                });
                const radioLabel = $('<label>')
                    .addClass('form-check-label')
                    .attr('for', building._id)
                    .text(`${building.name}`);

                radioDiv.append(radioInput, radioLabel);
                radioContainer.append(radioDiv);
            });
        }
        getDetailsByFaculties()
    });

</script>

<script>
    // Función para vaciar el formulario y mostrar el mensaje de guardado
    function vaciarFormularioMostrarMensaje() {
      // Vaciar el formulario
      document.getElementById("formulario").reset();
 
      // Mostrar el mensaje de guardado correctamente
      const mensaje = document.createElement('div');
      mensaje.textContent = 'Guardado correctamente';
      mensaje.style.cssText = 'position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: rgba(0, 255, 0, 0.7); padding: 20px; border-radius: 8px; color: black; display: none;';
      document.body.appendChild(mensaje);
 
      mensaje.style.display = 'block';
      setTimeout(function() {
        mensaje.style.display = 'none';
      }, 3000); // Ocultar el mensaje después de 3 segundos (ajusta según sea necesario)
    }
 
    // Función para ejecutar la lógica de guardado
    function guardarDatos() {
      // Aquí iría tu lógica de guardado, por ejemplo, una llamada a tu API o proceso de almacenamiento
   
      // Una vez que hayas realizado tu lógica de guardado, puedes vaciar el formulario y mostrar el mensaje
      vaciarFormularioMostrarMensaje();
    }
 
    // Evento que se dispara al enviar el formulario
    document.getElementById("formulario").addEventListener("submit", function(event) {
      event.preventDefault(); // Evitar el envío predeterminado del formulario
   
      // Llamar a la función para guardar después de un breve retraso
      setTimeout(guardarDatos, 100); // Ejecutar la lógica de guardado después de 100 milisegundos
    });
  </script>