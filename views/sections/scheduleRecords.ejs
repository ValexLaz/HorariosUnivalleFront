<style>
    .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
    }

    @media (min-width: 768px) {
        .bd-placeholder-img-lg {
            font-size: 3.5rem;
        }
    }

    .b-example-divider {
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
    }

    .bi {
        vertical-align: -.125em;
        fill: currentColor;
    }

    .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
    }

    .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
    }

    #register-parent {
        height: auto;
    }

    .list-group-item.selected {
        background-color: #7433c4;
        color: #fff;
    }

    .list-group-item.selected.subItem {
        background-color: #a26bea;
        color: #fff;
    }

    /*   tr[id]:hover {
      background-color: #a26bea;
      color: white;
    } */
</style>

<form  id="formulario">
    <!-- Contenido principal -->
    <h2>Buscar Horarios</h2>

    <!-- University Program Selection -->
    <div class="mb-3">
        <label for="id_class" class="form-label">Progrmas Universitarios (Carreras)</label>
        <select class="form-select" id="uniPrograms" dependency="semester" name="uniProgram" required>
            <option value="null">Seleccione una opcion</option>
        </select>
    </div>

    <!-- Semester Selection (Initially Disabled) -->
    <div class="mb-3">
        <label for="id_semester" class="form-label">Semestre</label>
        <select class="form-select" id="semester" dependency="class" name="id_semester" disabled required>
            <option value="null">Seleccione una opcion</option>
        </select>
    </div>

    <!-- Botón Generar Horario -->
    <button style="margin-bottom: 50px;" class="btn btn-primary" id="showSchedule" type="submit" >Mostrar Horario</button>
</form>
<div class="container">


    <div id="scheduleContainer" class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>#</th>
                    <th>Lunes</th>
                    <th>Martes</th>
                    <th>Miércoles</th>
                    <th>Jueves</th>
                    <th>Viernes</th>
                    <th>Sábado</th>
                </tr>
            </thead>
            <tbody>
                <!-- Filas para los intervalos de tiempo -->
                <tr id="7:10-8:00">
                    <th scope="row">7:10-8:00</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="8:00-8:50">
                    <th scope="row">8:00-8:50</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="9:00-9:50">
                    <th scope="row">9:00-9:50</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="9:50-10:40">
                    <th scope="row">9:50-10:40</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="10:50-11:40">
                    <th scope="row">10:50-11:40</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="11:40-12:30">
                    <th scope="row">11:40-12:30</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="13:30-14:20">
                    <th scope="row">13:30-14:20</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="14:20-15:10">
                    <th scope="row">14:20-15:10</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="15:10-16:00">
                    <th scope="row">15:10-16:00</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="16:00-17:10">
                    <th scope="row">16:00-17:10</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="17:10-18:00">
                    <th scope="row">17:10-18:00</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <tr id="18:00-19:00">
                    <th scope="row">18:00-19:00</th>
                    <td id="Lunes"></td>
                    <td id="Martes"></td>
                    <td id="Miercoles"></td>
                    <td id="Jueves"></td>
                    <td id="Viernes"></td>
                    <td id="Sabado"></td>
                </tr>
                <!-- Añadir más filas según sea necesario -->
            </tbody>
        </table>
    </div>
</div>

<script type="module">
    import Form from "./js/UI/Form.js"
    import RepositoryAPI from './js/RepositoryAPI.js';
    import Modal from "./js/UI/Modal.js"
    const repoAPI = new RepositoryAPI();

    $(document).ready(async function (params) {
        await getDetailsByProgramUniversity();
        const sampleScheduleData = [
            {
                "_id": "5fc98a6a7a36b371a66c5f7d",
                "dia": "Lunes",
                "Hora_inicio": "8:00 AM",
                "Hora_fin": "9:50 AM",
                "mateira_docente": {
                    "docente": {
                        "_id": "5fc98a6a7a36b371a66c5f7f",
                        "name": "Juan Pérez"
                    },
                    "materia": {
                        "_id": "5fc98a6a7a36b371a66c5f80",
                        "name": "Matemáticas"
                    }
                },
                "classroom": {
                    "_id": "5fc98a6a7a36b371a66c5f7e",
                    "name": "Aula 101"
                }
            },
            {
                "_id": "5fc98a6a7a36b371a66c5f81",
                "dia": "Miércoles",
                "Hora_inicio": "2:20 PM",
                "Hora_fin": "4:00 PM",
                "mateira_docente": {
                    "docente": {
                        "_id": "5fc98a6a7a36b371a66c5f82",
                        "name": "María Rodríguez"
                    },
                    "materia": {
                        "_id": "5fc98a6a7a36b371a66c5f83",
                        "name": "Historia"
                    }
                },
                "classroom": {
                    "_id": "5fc98a6a7a36b371a66c5f84",
                    "name": "Aula 102"
                }
            },
            {
                "_id": "5fc98a6a7a36b371a66c5f85",
                "dia": "Viernes",
                "Hora_inicio": "10:50 AM",
                "Hora_fin": "12:30 PM",
                "mateira_docente": {
                    "professor": {
                        "_id": "5fc98a6a7a36b371a66c5f86",
                        "name": "Carlos Gómez"
                    },
                    "class": {
                        "_id": "5fc98a6a7a36b371a66c5f87",
                        "name": "Ciencias"
                    }
                },
                "classroom": {
                    "_id": "5fc98a6a7a36b371a66c5f88",
                    "name": "Laboratorio 1"
                }
            }
        ];

        $('.form-select').on('change', async function () {
            var selectedOption = $(this).val();
            let collection = $(this).attr('dependency');
            let endpoint = $(this).attr('id');

            repoAPI.setCollection(collection);
            const response = await repoAPI.get(endpoint, selectedOption);
            await loadSectionOfSelection(collection, response.data);
        });

        //BUSQUEDA DE HORARIO
        const dataHtml =$('#formulario')[0].outerHTML;
        const form = new Form({
            formHtml: dataHtml
        })
        form.initializeEventSubmit(async function (event) {
            event.preventDefault();
            const formData = form.generateJSONFromInputs({
                form: this
            })
            repoAPI.setCollection("schedule");
            const response = await repoAPI.post(formData,"find");
            console.log(response);
            populateScheduleTable(response.data)
        })
    })

    function populateScheduleTable(scheduleData) {
        // Obtener la referencia del contenedor de la tabla
        const tableContainer = document.getElementById('scheduleContainer');

        // Iterar sobre los datos del horario
        scheduleData.forEach((schedule) => {
            // Obtener el día y las horas del horario
            const day = schedule.day;
            const startTime = schedule.start_time;
            const endTime = schedule.end_time;

            // Obtener el índice de la fila de inicio y fin en la tabla
            const startRowIndex = getRowIndex(startTime);
            const endRowIndex = getRowIndex(endTime);

            // Obtener las referencias de las celdas correspondientes al día
            const dayCells = tableContainer.querySelectorAll(`td:nth-child(${getDayColumnIndex(day)})`);

            // Rellenar las celdas con la información del horario
            for (let i = startRowIndex; i <= endRowIndex; i++) {
                const currentCell = dayCells[i];
                if (currentCell) {
                    // Agregar el contenido a la celda solo si está vacía
                    if (!currentCell.innerHTML) {
                        currentCell.innerHTML = `
                    Aula: ${schedule.classroom.code}<br>
                    Materia: ${schedule.class_professor.class.name}<br>
                    Docente: ${schedule.class_professor.professor.name}
                `;
                    }
                }
            }
        });
    }

    // Función para obtener el índice de la columna correspondiente al día
    function getDayColumnIndex(day) {
        const dayMapping = {
            "Lunes": 2,
            "Martes": 3,
            "Miércoles": 4,
            "Jueves": 5,
            "Viernes": 6,
            "Sábado": 7,
        };
        return dayMapping[day];
    }

    // Función para obtener el índice de la fila de inicio según la hora
    function getRowIndex(time) {
        const timeMapping = {
            "7:10-8:00": 2,
            "8:00-8:50": 3,
            "9:00-9:50": 4,
            "9:50-10:40": 5,
            "10:50-11:40": 6,
            "11:40-12:30": 7,
            "13:30-14:20": 8,
            "14:20-15:10": 9,
            "15:10-16:00": 10,
            "16:00-17:10": 11,
            "17:10-18:00": 12,
            "18:00-19:00": 13,
            // Añadir más según sea necesario
        };
        return timeMapping[time];
    }

    async function getDetailsByProgramUniversity() {
        repoAPI.setCollection('uniPrograms')
        const response = await repoAPI.getAll();
        const selectContainer = $("#formulario").find("#uniPrograms");
        console.log(response.data);
        response.data.forEach(UniProgram => {
            const option = $('<option>').attr({
                value: UniProgram._id
            }).text(`${UniProgram.name}`);
            selectContainer.append(option);
        });
    }
    async function loadSectionOfSelection(container, data) {
        $("#formulario").find(`#${container}`).prop('disabled', false);
        const selectContainer = $("#formulario").find(`#${container}`);
        selectContainer.find('option:not(:first-child)').remove();
        data.forEach(campo => {
            const option = $('<option>').attr({
                value: campo._id
            }).text(`${campo.name}`);
            selectContainer.append(option);
        });
    }


</script>