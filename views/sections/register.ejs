<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>
  .bd-placeholder-img {
    font-size: 1.125rem;
    text-anchor: middle;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
  }

  @media (min-width: 768px) {
    .bd-placeholder-img-lg {
      font-size: 3.5rem;
    }
  }

  .b-example-divider {
    height: 3rem;
    background-color: rgba(0, 0, 0, .1);
    border: solid rgba(0, 0, 0, .15);
    border-width: 1px 0;
    box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
  }

  .b-example-vr {
    flex-shrink: 0;
    width: 1.5rem;
    height: 100vh;
  }

  .bi {
    vertical-align: -.125em;
    fill: currentColor;
  }

  .nav-scroller {
    position: relative;
    z-index: 2;
    height: 2.75rem;
    overflow-y: hidden;
  }

  .nav-scroller .nav {
    display: flex;
    flex-wrap: nowrap;
    padding-bottom: 1rem;
    margin-top: -1px;
    overflow-x: auto;
    text-align: center;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
  }

  #register-parent {
    height: auto;
  }
</style>



<!-- Contenido principal -->
<div id="register-parent" class="container mt-4 mb-4">
  <div class="row">
    <!-- Menú desplegable -->
    <div class="col-md-3">
      <div class="list-group">
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="user">Usuario</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="faculty">Facultad</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link  " id="uniPrograms">Carrera</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="materia">Materia</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="semester">Semestre</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="classroom">Aula</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="classroom_types">Tipo Aula</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="buildings">Modulo</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link " id="professors">Docente</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link "
          id="professors_availabilities">Disponibilidad Docente</a>
        <a href="#" class="list-group-item list-group-item-action formulario-link "
          id="classroom_availabilities">Disponibilidad aula</a>
      </div>
    </div>

    <div class="col-md-9">
      <div class="card">
        <div class="card-body" id="respuesta-container">
          <h5 class="card-title">Formulario para Colección 1</h5>
        </div>
      </div>
    </div>
  </div>
  <div class="row">
    <!-- Ejemplo de tabla -->
    <div class="card mt-4" id="tabla-container">
      <div class="card-body">
        <h5 class="card-title">Tabla para Colección 1</h5>
      </div>
    </div>
  </div>
</div>

<script type="module" src="./js/RepositoryAPI.js"></script>
<script type="module">

  import RepositoryAPI from './js/RepositoryAPI.js';

  $(document).ready(function () {
    const repositoryAPI = new RepositoryAPI();

    //Se encarga de traer los formularios(vistas) para renderizar
    $(".formulario-link").click(async function (event) {
      event.preventDefault();
      var typeForm = $(this).attr("id");
      $.get(`/${typeForm}Form`, { typeForm: typeForm }, function (data) {
        console.log("Respuesta del servidor:", data);
        $("#respuesta-container").html(data);
      });
      repositoryAPI.setCollection(typeForm);
      const response = await repositoryAPI.getAll();
      const tablaGenerada = generarTablaDesdeJSON(response.data);
      document.getElementById("tabla-container").innerHTML = tablaGenerada; // Coloca la tabla en un contenedor con el ID "tabla-container"
    });

    $(document).on("submit", "#formulario", async function (event) {
      event.preventDefault();
      var formData = {};
      var formClass = $("#formulario").attr("class");
      $(this).find(":input").each(function () {
        var fieldName = $(this).attr("name");
        var fieldValue = $(this).val();
        if (fieldName && fieldValue) {
          formData[fieldName] = fieldValue;
        }
      });

      const response = await repositoryAPI.post(formData);
      console.log(response.data);
    });

    $("#tabla-container").on("click", ".editar", function (event) {
      event.preventDefault();
      var $row = $(this).closest("tr");
      var rowIndex = $row.index();
      let originalContent = {};
      originalContent[rowIndex] = {};
      $row.find(".editable").each(function () {
        var $cell = $(this);
        var header = $row.closest("table").find("th").eq($cell.index()).text(); // Obtener el texto del encabezado correspondiente a esta celda
        originalContent[rowIndex][header] = $cell.html(); // Almacenar el contenido de la celda usando el texto del encabezado como clave
      });

      console.log("Antes de editar:", originalContent[rowIndex]);

      // Habilitar la edición de las celdas de la fila actual
      $row.find(".editable").attr("contenteditable", "true");
    });

    $("#tabla-container").on("click", ".guardar", async function (event) {
      event.preventDefault();
      let $row = $(this).closest("tr");
      let rowId = $row.attr('id');
      let rowIndex = $row.index();

      let newContent = {};
      $row.find(".editable").each(function () {
        let $cell = $(this);
        let header = $row.closest("table").find("th").eq($cell.index()).text(); // Obtener el texto del encabezado correspondiente a esta celda
        newContent[header] = $cell.html(); // Almacenar el contenido nuevo de la celda
      });
      const response = await repositoryAPI.updateByID(newContent, rowId);
      $row.find(".editable").removeAttr("contenteditable");
    });

    $("#tabla-container").on("click", ".eliminar", async function (event) {
      event.preventDefault();
      let $row = $(this).closest("tr");
      let rowId = $row.attr('id');
      console.log(rowId);
      const response = await repositoryAPI.deleteByID(rowId);
      console.log(response);
      $(this).closest("tr").remove();
    });


  });

  function generarTablaDesdeJSON(jsonData) {
    if (!jsonData || !jsonData || !Array.isArray(jsonData) || jsonData.length === 0) {
      return "No se encontraron datos válidos.";
    }
    let columnas = Object.keys(jsonData[0])
    columnas = columnas.filter(elemento => elemento !== "_id");
    console.log(columnas);
    let tablaHTML = '<div class="table-responsive mt-3"><table class="table table-striped table-hover table-bordered"><thead><tr>';

    columnas.forEach((columna) => {
      tablaHTML += `<th>${columna}</th>`;
    });

    tablaHTML += '<th>:</th>';

    jsonData.forEach((fila, index) => {
      tablaHTML += `<tr id="${fila._id}">`;
      columnas.forEach((columna) => {
        tablaHTML += `<td class="editable fs-6" contenteditable="false">${fila[columna]}</td>`; // Bootstrap 5
      });
      tablaHTML += `<td>
                  <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="accionesDropdown${index}" data-bs-toggle="dropdown" aria-expanded="false">
                      :
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="accionesDropdown${index}">
                      <li><a class="dropdown-item editar" href="#">Editar</a></li>
                      <li><a class="dropdown-item eliminar" href="#">Eliminar</a></li>
                      <li><a class="dropdown-item guardar" href="#">Guardar</a></li>
                    </ul>
                  </div>
                </td>`;
      tablaHTML += '</tr>';
    });

    tablaHTML += '</tbody></table>';
    tablaHTML += '</div>';
    return tablaHTML;
  }
</script>