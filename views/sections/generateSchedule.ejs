<style>
  .bd-placeholder-img {
    font-size: 1.125rem;
    text-anchor: middle;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
  }

  @media (min-width: 768px) {
    .bd-placeholder-img-lg {
      font-size: 3.5rem;
    }
  }

  .b-example-divider {
    height: 3rem;
    background-color: rgba(0, 0, 0, .1);
    border: solid rgba(0, 0, 0, .15);
    border-width: 1px 0;
    box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
  }

  .b-example-vr {
    flex-shrink: 0;
    width: 1.5rem;
    height: 100vh;
  }

  .bi {
    vertical-align: -.125em;
    fill: currentColor;
  }

  .nav-scroller {
    position: relative;
    z-index: 2;
    height: 2.75rem;
    overflow-y: hidden;
  }

  .nav-scroller .nav {
    display: flex;
    flex-wrap: nowrap;
    padding-bottom: 1rem;
    margin-top: -1px;
    overflow-x: auto;
    text-align: center;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
  }

  #register-parent {
    height: auto;
  }

  .list-group-item.selected {
    background-color: #7433c4;
    color: #fff;
  }

  .list-group-item.selected.subItem {
    background-color: #a26bea;
    color: #fff;
  }
</style>
<form action="" id="formulario">
  <!-- Contenido principal -->
  <div class="container mt-4">
    <h2>Generador de Horarios</h2>

    <!-- University Program Selection -->
    <div class="mb-3">
      <label for="id_class" class="form-label">Progrmas Universitarios (Carreras)</label>
      <select class="form-select" id="uniPrograms" dependency="semester" name="uniProgram" required>
        <option value="null">Seleccione una opcion</option>
      </select>
    </div>
    <!-- Semester Selection (Initially Disabled) -->
    <div class="mb-3">
      <label for="id_semester" class="form-label">Semestre</label>
      <select class="form-select" id="semester" dependency="class" name="id_semester" disabled required>
        <option value="null">Seleccione una opcion</option>
      </select>
    </div>

    <!-- Número de Grupos Input -->
    <div class="mb-3" id="gruposContainer">
      <label for="gruposInput" class="form-label">Número de Grupos:</label>
      <input type="number" name="number_groups" class="form-control" id="gruposInput">
    </div>
    <!-- Botón Generar Horario -->
    <button class="btn btn-primary" id="generarHorarioBt">Generar Horario</button>
    <!-- HORARIOS GENERADOS -->
    <div style="margin-top: 50px;">
      <h3>HORARIOS GENERADOS</h3>
      <div id="horariosGeneradosContainer"></div>
    </div>
    <!-- Resultados o mensajes se mostrarán aquí -->
    <div id="showSchedule" style="margin-top: 20px;"></div>
  </div>

</form>

<script type="module">
  import Form from './js/UI/Form.js'
  import RepositoryAPI from './js/RepositoryAPI.js';
  import Modal from "./js/UI/Modal.js"
  const repoAPI = new RepositoryAPI();

  async function getDetailsByProgramUniversity() {
    repoAPI.setCollection('uniPrograms')
    const response = await repoAPI.getAll();
    const selectContainer = $("#formulario").find("#uniPrograms");
    console.log(response.data);
    response.data.forEach(UniProgram => {
      const option = $('<option>').attr({
        value: UniProgram._id
      }).text(`${UniProgram.name}`);
      selectContainer.append(option);
    });
  }
  async function loadSectionOfSelection(container, data) {
    $("#formulario").find(`#${container}`).prop('disabled', false);
    const selectContainer = $("#formulario").find(`#${container}`);
    selectContainer.find('option:not(:first-child)').remove();
    data.forEach(campo => {
      const option = $('<option>').attr({
        value: campo._id
      }).text(`${campo.name}`);
      selectContainer.append(option);
    });
  }

  $(document).ready(async function () {
    console.log("Document Ready");
    await getDetailsByProgramUniversity()
    const dataHtml =$('#formulario')[0].outerHTML;
    const form = new Form({
      formHtml: dataHtml
    })
    form.initializeEventSubmit(async function (event) {
      event.preventDefault();
      const formData = form.generateJSONFromInputs({
        form:this
      })
      repoAPI.setCollection("schedule");
      const response = await repoAPI.post(formData,"generate");
      new Modal(response.statusCode =200 ? "Creado Correctamente" :" Fallo al crear el horario","Alerta")
    })



    $('.form-select').on('change', async function () {
      var selectedOption = $(this).val();
      let collection = $(this).attr('dependency');
      let endpoint = $(this).attr('id');

      repoAPI.setCollection(collection);
      const response = await repoAPI.get(endpoint, selectedOption);
      await loadSectionOfSelection(collection, response.data);
    });

  });



</script>