<%- include('forms/partials/title.ejs', { titlePage:"Materia" }) %>
<form id="formulario" class="class" action="/agregar-materia" method="POST">
    <div class="mb-3">
        <label for="name" class="form-label">Nombre</label>
        <input type="text" class="form-control" id="name" name="name" required>
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Descripci√≥n</label>
        <textarea class="form-control" id="description" name="description" rows="4" required></textarea>
    </div>
    <div class="mb-3">
        <label for="hours_demanded" class="form-label">Horas de Trabajo</label>
        <input type="number" class="form-control" id="hours_demanded" name="hours_demanded" required>
    </div>
    <div class="mb-3">
        <label for="hours_week" class="form-label">Horas  total a la semana</label>
        <input type="number" class="form-control" id="hours_week" name="hours_week" required>
    </div>
    <!-- classroom_type selection -->
    <div class="mb-3">
        <label for="id_class" class="form-label">Tipo de aula</label>
        <select class="form-select" id="classroom_type" name="classroom_type" required>
            <option value="null">Seleccione una opcion</option>
        </select>
    </div>
    <!-- University Program Selection -->
    <div class="mb-3">
        <label for="id_class" class="form-label">Progrmas Universitarios (Carreras)</label>
        <select class="form-select" dependency="semester" id="uniPrograms" name="university_program" required>
            <option value="null">Seleccione una opcion</option>
        </select>
    </div>
     <!-- Semester Selection -->
    <div class="mb-3">
        <label for="id_semester" class="form-label">Semestre</label>
        <select class="form-select" id="semester" name="semester" disabled  required>
            <option value="1">Elije un semestre</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Agregar Algo</button>
</form>
<script type="module">
    import RepositoryAPI from './js/RepositoryAPI.js';
    const repoAPI = new RepositoryAPI('semester');

    async function getDetailsByProgramUniversity() {
        repoAPI.setCollection('uniPrograms')
        const response = await repoAPI.getAll();
        const selectContainer = $("#formulario").find("#uniPrograms");
        console.log(response.data);
        response.data.forEach(UniProgram => {
            const option = $('<option>').attr({
                value: UniProgram._id
            }).text(`${UniProgram.name}`);
            selectContainer.append(option);
        });

    }
    async function loadSectionOfSelection(container,data) {
        $("#formulario").find(`#${container}`).prop('disabled', false);
        const selectContainer = $("#formulario").find(`#${container}`);
        selectContainer.find('option:not(:first-child)').remove();
        data.forEach(campo => {
            const option = $('<option>').attr({
                value: campo._id
            }).text(`${campo.name}`);
            selectContainer.append(option);
        });
    }
    async function getDetailsByTypesClassroom() {
        repoAPI.setCollection('classroom/types')
        const response = await repoAPI.getAll();
        const selectContainer = $("#formulario").find("#classroom_type");
        console.log(response.data);
        response.data.forEach(classType => {
            const option = $('<option>').attr({
                value: classType._id
            }).text(`${classType.name}`);
            selectContainer.append(option);
        });

    }
    $(document).ready(async function () {
        console.log("Document Ready");
        await getDetailsByProgramUniversity()
        await getDetailsByTypesClassroom();
        $('.form-select').on('change', async function () {
            var selectedOption = $(this).val();
            let collection = $(this).attr('dependency');
            let endpoint = $(this).attr('id');

            repoAPI.setCollection(collection);
            const response = await repoAPI.get(endpoint,selectedOption);
            await loadSectionOfSelection(collection,response.data);
        });
    });

</script>